%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 48 722 200 826
%%Title: spk1
%%CreationDate: Tue Mar  9 10:33:29 2021
%%Creator: Tgif-4.2.5-QPL written by William Chia-Wei Cheng (bill.cheng@acm.org)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 87 dict def
tgifdict begin

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/TGEL % tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifpatdict 12 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   bytesperrow mul
   pat i cellh mod bytesperrow mul bytesperrow getinterval putinterval
 } def

/tgifpatproc
 { 0 1 cells_wd 1 sub {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/TGPF % tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellh exch def
      /cellw exch def
      /pat exch def

      /cells_wd w cellw div cvi def
      /bytesperrow cellw 8 div ceiling cvi def
      /retstr cells_wd bytesperrow mul string def
      /i 0 def

      tgiforigctm setmatrix
      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffffddffffff> def
/pat11 <7ffffffff7ffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def
/tgifstrw 0 def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%Page: 1 1

%%PageBoundingBox: 48 722 200 826
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11.602 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      112 64 M
      128 52 L
   TGSM
   1 W
   S
GR

% TEXT
NP
0 SG
   GS
      1 W
      152 176 M
      GS
            0 SG
            /Ryumin-Light-EUC-H FF dup /WMode known {dup /WMode get 1 eq {[0 1 -1 0 0 0.3] makefont} if} if
[18 0 0 -18 0 0] MS
            (\260\265\305\305\301\307\273\322) SH
      GR
      0 19 RM
      GS
            0 SG
            /Ryumin-Light-EUC-H FF dup /WMode known {dup /WMode get 1 eq {[0 1 -1 0 0 0.3] makefont} if} if
[18 0 0 -18 0 0] MS
            (\305\305\260\265\244\362\262\303\244\250\244\353\244\310\312\321\267\301\244\271\244\353) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      132 64 M
      160 64 L
      160 80 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      152 80 M
      168 80 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      152 96 M
      168 96 L
   TGSM
   1 W
   S
GR

% BOX
0 SG
GS
   NP 152 84 M 168 84 L 168 92 L 152 92 L CP 1 SG F
   0 SG
   NP 152 84 M 168 84 L 168 92 L 152 92 L CP EC NP
   pat5 8 8 144 80 32 16 TGPF
GR
GS
   10 SM
   GS
      NP 152 84 M 168 84 L 168 92 L 152 92 L CP
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      160 96 M
      160 112 L
      128 112 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      168 88 M
      184 88 L
   TGSM
   1 W
   S
GR

% BOX
0 SG
GS
   NP 128 164 M 144 164 L 144 172 L 128 172 L CP 1 SG F
   0 SG
   NP 128 164 M 144 164 L 144 172 L 128 172 L CP EC NP
   pat5 8 8 120 160 32 16 TGPF
GR
GS
   10 SM
   GS
      NP 128 164 M 144 164 L 144 172 L 128 172 L CP
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      284 64 M
      312 64 L
      312 80 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      304 80 M
      320 80 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      304 96 M
      320 96 L
   TGSM
   1 W
   S
GR

% BOX
0 SG
GS
   NP 300 84 M 324 84 L 324 92 L 300 92 L CP 1 SG F
   0 SG
   NP 300 84 M 324 84 L 324 92 L 300 92 L CP EC NP
   pat5 8 8 296 80 32 16 TGPF
GR
GS
   10 SM
   GS
      NP 300 84 M 324 84 L 324 92 L 300 92 L CP
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      312 96 M
      312 112 L
      280 112 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      324 88 M
      340 88 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      332 40 M
      342.67 72.00 342.67 104.00
      332 136 CT
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      192 40 M
      181.33 72.00 181.33 104.00
      192 136 CT
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      88 88 M
      104 88 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      92 92 M
      100 92 L
   TGSM
   3 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      96 88 M
      96 64 L
      108 64 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      96 92 M
      96 112 L
      128 112 L
   TGSM
   1 W
   S
GR

% OVAL
0 SG
NP 112 64 4 4 TGEL
CP 1 SG F
   0 SG
GS
   GS
      NP 112 64 4 4 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 128 64 4 4 TGEL
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      240 88 M
      256 88 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      244 92 M
      252 92 L
   TGSM
   3 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      248 88 M
      248 64 L
      260 64 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      248 92 M
      248 112 L
      280 112 L
   TGSM
   1 W
   S
GR

% OVAL
0 SG
GS
   GS
      NP 280 64 4 4 TGEL
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      264 64 M
      280 60 L
   TGSM
   1 W
   S
GR

% OVAL
0 SG
NP 264 64 4 4 TGEL
CP 1 SG F
   0 SG
GS
   GS
      NP 264 64 4 4 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      192 32 M
      GS
        GS
        0
            /Ryumin-Light-EUC-H FF dup /WMode known {dup /WMode get 1 eq {[0 1 -1 0 0 0.3] makefont} if} if
[14 0 0 -14 0 0] MS
            (\277\266\306\260\310\304) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Ryumin-Light-EUC-H FF dup /WMode known {dup /WMode get 1 eq {[0 1 -1 0 0 0.3] makefont} if} if
[14 0 0 -14 0 0] MS
            (\277\266\306\260\310\304) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      332 32 M
      GS
        GS
        0
            /Ryumin-Light-EUC-H FF dup /WMode known {dup /WMode get 1 eq {[0 1 -1 0 0 0.3] makefont} if} if
[14 0 0 -14 0 0] MS
            (\277\266\306\260\310\304) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Ryumin-Light-EUC-H FF dup /WMode known {dup /WMode get 1 eq {[0 1 -1 0 0 0.3] makefont} if} if
[14 0 0 -14 0 0] MS
            (\277\266\306\260\310\304) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Tue Mar  9 10:33:29 2021
%%DocumentFonts: Ryumin-Light-EUC-H
%%EOF
